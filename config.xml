<?xml version="1.0" encoding="UTF-8"?><project>
  <actions/>
  <description/>
  <logRotator class="hudson.tasks.LogRotator">
    <daysToKeep>10</daysToKeep>
    <numToKeep>100</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.openshift.OpenShiftBuilderSizeJobProperty plugin="openshift@1.4">
      <builderSize>small</builderSize>
    </hudson.plugins.openshift.OpenShiftBuilderSizeJobProperty>
    <hudson.plugins.openshift.OpenShiftBuilderTimeoutJobProperty plugin="openshift@1.4">
      <builderTimeout>300000</builderTimeout>
    </hudson.plugins.openshift.OpenShiftBuilderTimeoutJobProperty>
    <hudson.plugins.openshift.OpenShiftBuilderTypeJobProperty plugin="openshift@1.4">
      <builderType>diy-0.1</builderType>
    </hudson.plugins.openshift.OpenShiftBuilderTypeJobProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <assignedNode>demo_pull_request</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers class="vector"/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/sh

USER="wdecoste"
REPO="kitchensink-example"
OPENSHIFT_GIT="ssh://534d8ea56892df5e750001b5@demo-demo.example.com/~/git/demo.git/"
SOURCE_GIT="https://github.com/wdecoste/kitchensink-example.git"
APP_NAME="demo"
KEY="[OPENSHIFT]"
BASE_DIR="/usr/share/demo"
PULL_FILE="${BASE_DIR}/demo_pull.txt"
TMP_DIR="/usr/share/demo"

echo "Checking for pull requests ..."

pulls=`wget -q -O - "https://api.github.com/repos/${USER}/${REPO}/pulls"`

max=$(&lt;${PULL_FILE})
echo "Last Pull Request: ${max}"

title=`echo "${pulls}" | ${BASE_DIR}/jsawk 'return this.title'`
echo "Title: ${title}"

if [[ ${title} == *${KEY}* ]]
then
  echo "${KEY} found. Beginning Gear merge"

  pull=`echo "${pulls}" | ${BASE_DIR}/jsawk 'return this.number' | cut -d'[' -f 2 | cut -d']' -f 1`
  echo "Pull Request: ${pull}"

  if [[ ${pull} &gt; ${max} ]]
  then

    echo "Pushing changes to OpenShift"

    git clone ${OPENSHIFT_GIT} ${TMP_DIR}/${APP_NAME}

    pushd ${TMP_DIR}/${APP_NAME}

    git remote add upstream ${SOURCE_GIT}

    sed -i 's/\/upstream\/*/\/upstream\/*\n\tfetch = +refs\/pull\/*\/head:refs\/pull\/upstream\//g' ${TMP_DIR}/${APP_NAME}/.git/config

    git fetch upstream

    git checkout -b ${pull} pull/upstream/${pull}

    git checkout master

    git merge ${pull} -m "test" -X theirs

    git push

    echo "${pull}" &gt; "${PULL_FILE}"

    popd
  else
    echo "No unprocessed pull requests"
  fi
else
    echo "${KEY} not found. No additional processing in post-receive hook"
fi

rm -rf ${TMP_DIR}/${APP_NAME}</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers/>
</project>